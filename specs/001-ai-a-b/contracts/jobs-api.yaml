openapi: 3.0.3
info:
  title: Jobs API
  description: 비동기 작업 관리를 위한 API
  version: 1.0.0

paths:
  /api/jobs/{jobId}:
    get:
      summary: 작업 상태 조회
      tags: [Jobs]
      security:
        - BearerAuth: []
      parameters:
        - name: jobId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: 작업 상태 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /api/jobs/{jobId}/cancel:
    post:
      summary: 작업 취소
      tags: [Jobs]
      security:
        - BearerAuth: []
      parameters:
        - name: jobId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: 작업 취소 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "작업이 취소되었습니다"
                  job:
                    $ref: '#/components/schemas/Job'
        '400':
          description: 취소할 수 없는 상태
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /api/jobs/room/{roomId}:
    get:
      summary: 방의 작업 목록 조회
      tags: [Jobs]
      security:
        - BearerAuth: []
      parameters:
        - name: roomId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: type
          in: query
          schema:
            type: string
            enum: [ai_debate, ai_judge, ai_jury, notification]
        - name: status
          in: query
          schema:
            type: string
            enum: [queued, running, succeeded, failed, retrying, cancelled]
      responses:
        '200':
          description: 작업 목록 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  jobs:
                    type: array
                    items:
                      $ref: '#/components/schemas/Job'
                  total:
                    type: integer

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Job:
      type: object
      properties:
        id:
          type: string
          format: uuid
        type:
          type: string
          enum: [ai_debate, ai_judge, ai_jury, notification]
        status:
          type: string
          enum: [queued, running, succeeded, failed, retrying, cancelled]
        room_id:
          type: string
          format: uuid
          nullable: true
        payload:
          type: object
          description: "작업별 입력 데이터"
        result:
          type: object
          nullable: true
          description: "작업 완료 시 결과 데이터"
        error_message:
          type: string
          nullable: true
          description: "실패 시 오류 메시지"
        retry_count:
          type: integer
          minimum: 0
          description: "재시도 횟수"
        max_retries:
          type: integer
          minimum: 0
          description: "최대 재시도 횟수"
        progress:
          type: object
          nullable: true
          properties:
            current_step:
              type: string
            total_steps:
              type: integer
            completed_steps:
              type: integer
            estimated_remaining:
              type: string
              description: "예상 남은 시간 (예: '5 minutes')"
        scheduled_at:
          type: string
          format: date-time
          description: "실행 예정 시간"
        started_at:
          type: string
          format: date-time
          nullable: true
          description: "실행 시작 시간"
        completed_at:
          type: string
          format: date-time
          nullable: true
          description: "완료 시간"
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    JobPayload:
      oneOf:
        - $ref: '#/components/schemas/DebateJobPayload'
        - $ref: '#/components/schemas/JudgeJobPayload'
        - $ref: '#/components/schemas/JuryJobPayload'
        - $ref: '#/components/schemas/NotificationJobPayload'

    DebateJobPayload:
      type: object
      properties:
        room_id:
          type: string
          format: uuid
        round:
          type: integer
          minimum: 1
          maximum: 3
        argument_a:
          type: object
        argument_b:
          type: object
        previous_sessions:
          type: array
          items:
            type: object

    JudgeJobPayload:
      type: object
      properties:
        room_id:
          type: string
          format: uuid
        debate_sessions:
          type: array
          items:
            type: object
        jury_votes:
          type: array
          items:
            type: object

    JuryJobPayload:
      type: object
      properties:
        room_id:
          type: string
          format: uuid
        debate_sessions:
          type: array
          items:
            type: object
        jury_count:
          type: integer
          minimum: 7
          maximum: 7

    NotificationJobPayload:
      type: object
      properties:
        user_id:
          type: string
          format: uuid
        type:
          type: string
          enum: [room_joined, debate_completed, verdict_ready]
        message:
          type: string
        room_id:
          type: string
          format: uuid

  responses:
    Forbidden:
      description: 접근 권한 없음
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "forbidden"
              message:
                type: string
                example: "이 작업에 접근할 권한이 없습니다"

    NotFound:
      description: 리소스를 찾을 수 없음
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "not_found"
              message:
                type: string
                example: "요청한 작업을 찾을 수 없습니다"
